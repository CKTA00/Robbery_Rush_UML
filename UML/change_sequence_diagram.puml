@startuml
'https://plantuml.com/sequence-diagram

skinparam lifelineStrategy solid
participant UnityEngine
activate UnityEngine
rnote across: application during gameplay (player pressed "PLAY" and game started)

UnityEngine -> GameManager ++: update()
rnote over GameManager: distance to next\nroad divergence\nis below 500m
GameManager -> Generator --++: stop generation\nand place road\ndivergence in 500m
GameManager <-- Generator --++:


alt new biomes
    GameManager -> MenuManager --++: show biome choice
    UnityEngine <-- MenuManager --: returns
else new player vehicle stats
    GameManager -> MenuManager --++: show vehicle stats choice
    UnityEngine <-- MenuManager --: returns
end

...
UnityEngine -> GameManager ++: player chosen option
GameManager -> PlayerVehicle --++: start turning animation\nand disable steering
UnityEngine <-- PlayerVehicle --: return
loop until animation ends
    UnityEngine -> PlayerVehicle ++:update()
    PlayerVehicle -> PlayerVehicle: update animation
    UnityEngine <-- PlayerVehicle --:return
end
alt new biomes
UnityEngine -> GameManager ++: change biome
    GameManager -> GameManager: play new biome music
    GameManager -> MenuManager --++: enable steering
    GameManager <-- MenuManager --++:
    GameManager -> Generator --++: start generating\nnew biome features
    UnityEngine <-- Generator --: returns

else new player vehicle stats
    UnityEngine -> GameManager ++: change player stats
    GameManager -> MenuManager --++: change vehicle stats
    GameManager <-- MenuManager --++:
    GameManager -> MenuManager --++: enable steering
    GameManager <-- MenuManager --++:
    GameManager -> Generator --++: start generating
    UnityEngine <-- Generator --: returns
    'UnityEngine <-- MenuManager --: returns
end




@enduml

